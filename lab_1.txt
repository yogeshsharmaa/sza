CREATE DATABASE employee_db;
USE employee_db;

-- creating employee table as strong entity without relationship
CREATE TABLE `employee` (
	`ssn` INT PRIMARY KEY,
	`f_name` VARCHAR(50) NOT NULL,
    `m_name` VARCHAR(50),
    `l_name` VARCHAR(50) NOT NULL,
    `address`  VARCHAR(200),
    `b_day` DATE NOT NULL,
    `salary` DECIMAL(10,2)
    );

-- inserting values in the employee Table
INSERT INTO employee (ssn,f_name,m_name,l_name,address,b_day,salary)
VALUES
    (10,'ABCD','EFG','XYZ','Bangalore','1990-08-01',100000.00),
	(1,'Nabendu',NULL,'Das','West Bengal','2001-09-23',60000.00),
    (2,'Ashish',NULL,'Garg','Delhi','2000-06-20',50000.00);

-- creating department table as strong entity without relationship
CREATE TABLE `department` (
	`d_no` INT PRIMARY KEY,
    `d_name` VARCHAR(50)
    );
-- ALTER TABLE `department` MODIFY COLUMN `m_start_date` DATE;

-- inserting values to department table
INSERT INTO department(d_no,d_name)
VALUES
	(123,'Software Developer'),
    (345,'Networking');

-- creating project table 
CREATE TABLE `project` (
	`p_no` INT PRIMARY KEY, 
    `p_name` VARCHAR(50) NOT NULL,
    `location` VARCHAR(100));
    
-- inserting values to project table
INSERT INTO `project` (p_no,p_name,location)
VALUES
	(100,'Banglaore Guide App','bangalore');

-- creating dependent weak entity with partial key refering from employee table
CREATE TABLE `dependent` (
	`emp_ssn` INT,
    `emp_name` VARCHAR(50),
    `sex` VARCHAR(10),
    `b_day` DATE,
    `relationship` VARCHAR(50),
    PRIMARY KEY (`emp_ssn`,`emp_name`),
    FOREIGN KEY (`emp_ssn`) REFERENCES `employee` (`ssn`)
    );

-- adding values to the dependent table
INSERT INTO `dependent`(emp_ssn,emp_name,sex,b_day,relationship)
VALUES
	(1,'Nabendu Das','Male','2001-09-23','Single'),
    (10,'ABCD EFG XYZ','FEMALE','1990-08-01','Married'),
    (2,'Ashish Garg','Male','2000-06-20','Single');

-- adding department foreign key to the employee table from department table
ALTER TABLE `employee`
ADD COLUMN `d_no` INT,
ADD CONSTRAINT `fk_dept_no`
FOREIGN KEY (`d_no`) REFERENCES `department`(`d_no`);

-- adding supervisor ssn as foreign key to the employee table
ALTER TABLE `employee`
ADD COLUMN `sup_ssn` INT,
ADD CONSTRAINT `fk_supervisor_ssn`
FOREIGN KEY (`sup_ssn`) REFERENCES `employee`(`ssn`);

-- updating employee values with foreign keys
UPDATE `employee` 
SET d_no = '123' , sup_ssn = 10
WHERE ssn = 1;

UPDATE `employee` 
SET d_no = '123' , sup_ssn = 10
WHERE ssn = 2;

UPDATE `employee` 
SET d_no = '123' , sup_ssn = 10
WHERE ssn = 10;

-- adding manager ssn as foreign key in department table with start date
ALTER TABLE `department`
ADD COLUMN `m_ssn` INT, 
ADD COLUMN `m_start_date` DATE,
ADD CONSTRAINT `fk_manager_ssn`
FOREIGN KEY (`m_ssn`) REFERENCES `employee`(`SSN`);

-- updating the values of deparment with foreign key
UPDATE `department`
SET m_ssn =  2, m_start_date = '2022-09-30'
WHERE d_no = 123; 

-- adding department no to the project table as foreign key
ALTER TABLE `project`
ADD COLUMN `d_no` INT,
ADD CONSTRAINT `fk_proj_dept_no`
FOREIGN KEY (`d_no`) REFERENCES `department`(`d_no`);

-- updating the project table values with foreign keys
UPDATE `project`
SET d_no = 123
WHERE p_no = 100;

-- adding works_on table for m:n relationship between employee and project
CREATE TABLE `works_no` (
	`emp_ssn` INT,
    `p_no` INT,
    `hour` INT,
    PRIMARY KEY (`emp_ssn`,`p_no`),
    FOREIGN KEY (`emp_ssn`) REFERENCES `employee`(`ssn`),
    FOREIGN KEY (`p_no`) REFERENCES `project`(`p_no`)
    );

-- adding values to works on table
INSERT INTO `works_no`(emp_ssn,p_no,hour)
VALUES
	(1,100,10),
    (2,100,6);

-- adding dept location table for multivalued attribute location
CREATE TABLE `dept_location` (
	`d_no` INT,
    `d_locations` VARCHAR(100),
	PRIMARY KEY (`d_no`,`d_locations`),
    FOREIGN KEY (`d_no`) REFERENCES `department`(`d_no`)
    );

-- adding values into dept_location table
INSERT INTO `dept_location` (d_no,d_locations)
VALUES
	(123,'bangalore'),
    (123,'delhi'),
    (123,'kolkata');
tinyurl.com/rvcedm


ssn     | int           | NO   | PRI | NULL    |       |
| fname   | varchar(10)   | YES  |     | NULL    |       |
| mname   | varchar(10)   | YES  |     | NULL    |       |
| lname   | varchar(10)   | YES  |     | NULL    |       |
| s_ssn   | int           | YES  | MUL | NULL    |       |
| d_no    | int           | YES  | MUL | NULL    |       |
| address | varchar(50)   | YES  |     | NULL    |       |
| sex     | varchar(50)   | YES  |     | NULL    |       |
| salary  | decimal(10,2) | YES


(101, 'John', 'x','Doe',NULL,1,'123 Main St','M',75000.00,'1980-05-15'),
(102, 'Jane', 'y','Smith', NULL,1, '456 Elm St','F',80000.00,'1982-03-20'),
(103, 'Robert','z', 'Johnson',101,1, '789 Oak St','M', 90000.00,'1990-07-10'),
(104, 'Emily','a','Wilson',101, 2, '101 Pine St','F',70000.00,'1985-12-30'),
(105, 'Michael','b', 'Brown',101,2,'222 Cedar St','M', 85000.00,'1988-09-25'),
(106, 'Sarah','c','Davis',101,3,'333 Maple St','F',72000.00,'1995-04-12');


VALUES
(101,1,'2020-01-01'),
(101,2,'2021-06-01'),
(102,1,'2022-02-01');


| p_no     | int           | NO   | PRI | NULL    |       |
| p_name   | varchar(20)   | YES  |     | NULL    |       |
| end_date | date          | YES  |     | NULL    |       |
| worth    | decimal(10,2) | YES  |     | NULL    |       |
| d_no

(501, 'Financial Analysis','2023-12-31', 150000.00,  1),
(502, 'Research Project', '2024-06-30',120000.00, 2),
(503, 'Budget Planning','2023-11-30', 180000.00, 1),
(504, 'Marketing Campaign','2023-10-31',90000.00,  3);

VALUES
(103, 'Emma', 'F', '2010-03-10','friend'),
(103, 'Oliver', 'M', '2015-07-20','Child'),
(104, 'Sophia', 'F', '2009-05-05','wife'),
(105, 'Ethan', 'M', '2013-12-15','brother'),
(106, 'Ava', 'F', '2018-02-28', 'friend');


1)SELECT e.fname, e.lname, (SELECT d_name FROM department WHERE d_no = e.d_no) AS dept_Name
FROM employee e
WHERE e.salary > (
SELECT AVG(salary)
FROM employee
WHERE d_no = 1
);

2)SELECT e.fname, e.lname, d.d_name
FROM employee e, workson w, project p, department d
WHERE e.ssn = w.ssn
AND w.p_no = p.p_no
AND p.d_no = d.d_no
AND d.d_name = 'R&D'
GROUP BY e.ssn
HAVING COUNT(w.p_no) >= 2;

3)SELECT d.d_name , p.p_name
FROM department d, project p
WHERE d.d_no = p.d_no
AND (p.end_date > CURDATE() OR p.end_date IS NULL);

4)
SELECT DISTINCT s.ssn, s.fname , s.lname
FROM employee s
WHERE s.ssn IN (
SELECT s_ssn
FROM employee e
WHERE e.ssn IN (SELECT DISTINCT ssn FROM workson)
GROUP BY s_ssn
HAVING COUNT(*) >3
);

5)

SELECT d2.fname
FROM employee e, workson w, project p, department d, dependent d2
WHERE e.ssn = w.ssn
AND w.p_no = p.p_no
AND e.d_no = d.d_no
AND e.ssn = d2.ssn
AND p.worth >= 1000000;

6)
6)select d.d_name,e.ssn,e.fname,e.lname
 FROM department d,employee e,workson w,project p 
WHERE e.ssn=w.ssn and w.p_no=p.p_no and p.d_no=d.d_no 
GROUP BY d.d_no,e.fname,e.lname,e.ssn 
HAVING COUNT(distinct p.location)>1;

